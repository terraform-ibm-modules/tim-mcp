[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "tim-mcp"
# Version is managed dynamically via git tags using hatch-vcs
# Do not add a static version field here as it will conflict with dynamic versioning
dynamic = ["version"]
description = "Terraform IBM Modules MCP"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "httpx==0.28.1",
    "fastmcp==2.12.3",
    "pydantic>=2.11.7",
    "tenacity==9.0.0",
    "structlog==24.4.0",
    "click>=8.0.0",
]

[project.scripts]
tim-mcp = "tim_mcp.main:cli"

[project.optional-dependencies]
dev = [
    "pytest==8.4.2",
    "pytest-asyncio==0.24.0",
    "pytest-mock==3.14.0",
    "vcrpy==6.0.2",
    "ruff==0.8.4",
    "hypothesis>=6.100.0",
]

[tool.ruff]
line-length = 88
target-version = "py311"
exclude = ["common-dev-assets"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E203",  # whitespace before ':' (conflicts with black/ruff formatter)
    "E501",  # line too long (handled by formatter)
    "B007",  # unused loop control variable (sometimes intentional)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["test"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[dependency-groups]
dev = [
    "pytest-asyncio>=0.24.0",
    "ruff>=0.8.4",
]

[tool.hatch.build]
include = [
    "tim_mcp/**/*.py",
    "static/**/*",
]

[tool.hatch.build.targets.wheel]
packages = ["tim_mcp"]

[tool.hatch.build.targets.wheel.force-include]
"static" = "tim_mcp/static"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "tim_mcp/_version.py"
